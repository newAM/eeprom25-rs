on: [push, pull_request]

name: CI

jobs:
  build:
    name: Compile Check
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - "x86_64-unknown-linux-gnu"
          - "thumbv6m-none-eabi"
          - "thumbv7em-none-eabi"
          - "thumbv7em-none-eabihf"
          - "thumbv7m-none-eabi"
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - run: RUSTFLAGS="-D warnings" cargo build --target ${{ matrix.target }}

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
      - run: RUSTFLAGS="-D warnings" cargo test

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
      - run: RUSTFLAGS="-D warnings" cargo doc

  clippy_check:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          components: clippy
      - uses: actions-rs/clippy-check@v1.0.7
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features

  format_check:
    name: Rust Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
          components: rustfmt
      - run: cargo fmt -- --check

  release:
    name: crates.io release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [clippy_check, format_check, build, test, docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1.0.7
        with:
          toolchain: stable
      - run: cargo publish --token ${CRATES_IO_TOKEN}
        env:
          CRATES_IO_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
